// Remoting, first system.
Remote-Exercise {
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }
    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2552
      }
    }
  }
}

// Remoting, second system.
Remote-Exercise-Lookup {
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }
    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2553
      }
    }
  }
}

// Remoting, thrid system.
Remote-Exercise-Creation {
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
      deployment{
        /Remotely-Created-Worker-Actor {
          remote: "akka.tcp://Remote-System@127.0.0.1:2552"
        }
      }
    }
    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2554
      }
    }
  }
}

// Clustering: Frontend node that handles the incoming requests and sends them to the backend system.
FrontendNode {
  akka {
    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
    }
    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2551
      }
    }
    cluster{
      roles: ["frontend"]
      seed-nodes = [
        "akka.tcp://ClusterSystem@127.0.0.1:2551"
      ]
      auto-down-unreachable-after = 10s
    }
  }
}

// Clustering: Backend processing node.
BackendNode{
  akka {
    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
    }
    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        hostname = "127.0.0.1"
        port = 0
      }
    }
    cluster{
      roles: ["backend"]
      seed-nodes = [
        "akka.tcp://ClusterSystem@127.0.0.1:2551"
      ]
      auto-down-unreachable-after = 10s
    }
  }
}



